{{- if eq .Values.installKafka "yes" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry-deploy
  namespace: {{ .Values.namespace | default "default" }}
  labels:
    app: schema-registry
    netpol: kafka    
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schema-registry
      netpol: kafka
  template:
    metadata:
      labels:
        app: schema-registry
        netpol: kafka
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: eks.amazonaws.com/nodegroup
                    operator: In
                    values:
                      - kafka
      initContainers:
        - name: init-kafka-0
          image: busybox:1.28
          command: ['sh', '-c', "until nslookup kafka-0.kafka-headless.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for Kafka; sleep 2; done"]
        - name: init-kafka-1
          image: busybox:1.28
          command: ['sh', '-c', "until nslookup kafka-1.kafka-headless.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for Kafka; sleep 2; done"]
        - name: init-kafka-2
          image: busybox:1.28
          command: ['sh', '-c', "until nslookup kafka-2.kafka-headless.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for Kafka; sleep 2; done"]
        - name: init-kafka-3
          image: busybox:1.28
          command: ['sh', '-c', "until nslookup kafka-3.kafka-headless.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for Kafka; sleep 2; done"]                        
      containers:
        - name: schema-registry
          image: {{ .Values.image.schemaregistryImage }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: schema-registry
              containerPort: 8081
          resources: {}
          env:
            - name: SCHEMA_REGISTRY_HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SCHEMA_REGISTRY_LISTENERS
              value: http://0.0.0.0:8081
            - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
              value: kafka-svc:9092
            - name: SCHEMA_REGISTRY_KAFKASTORE_GROUP_ID
              value: schema-registry
            - name: SCHEMA_REGISTRY_MASTER_ELIGIBILITY
              value: "true"
            - name: SCHEMA_REGISTRY_HEAP_OPTS
              value: "-Xms600M -Xmx600M"


{{- else }}
{{- end }}
