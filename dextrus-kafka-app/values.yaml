# Default values for dextrus-application.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


name: "test"
namespace: "test"

s3:
  bucket_name: "dextrus-test28092021"
  access_key: ""
  secret_key: ""
  region: "ap-south-1"

rds_end_point: "terraform-20210928143533128300000001.ciwmij2ca5ul.ap-south-1.rds.amazonaws.com"
deploymentMode: "s3Cluster"

kubernetes:
  master: "https://21E8134B7861EB39271BAA762E942EA6.yl4.ap-south-1.eks.amazonaws.com"


efs:
  fileSystemID: "fs-0efa8a157be49c182"
  region: "ap-south-1"
  dnsName: ""
  nfs:
    server: "fs-0efa8a157be49c182.efs.ap-south-1.amazonaws.com"

dextrusui:
  service:
    type: ""

dextrusprod:
  service:
    type: ""


dextrusweb:
  spark_service:
    type: ""
  service:
    type: ""
  data:
    applicationDev:
      frontendUrl: "http://54.193.227.29:9090"
      logi:
        baseUrl: "http://3.127.245.90:8080"
        username: "supervisor"
        password: "Dextrus!123"


dbexplorer:
  service:
    type: ""
  spark_service:
    type: ""

wrangler:
  service:
    type: ""
  spark_service:
    type: ""

streaming:
  service:
    type: ""

systemVariable:
  service:
    type: ""

twitter:
  service:
    type: ""


############################################################

installKafka: "no"

zookeeper:
  datadir:
    resources:
      storageSize: 5Gi
  datalogdir:
    resources:
      storageSize: 5Gi

kafka:
  resources:
    storageSize: 100Gi


##########################################################
#
# Fill below details for new ingress controller that will be created only for dextrus application
#
installIngress: "no" # if 'yes' a new ingress will be created

ingressController:
  namespace: "dextrus-ingress" #namespace where all ingress services, controllers and deployments will be part of.
  ingressClass: "dextrus-ingress" #Ingress class used by the ingress controller deployed with this application
  image: "k8s.gcr.io/ingress-nginx/controller:v1.1.0@sha256:f766669fdcf3dc26347ed273a55e754b427eb4411ee075a53f30718b4499076a"

##############################################################
#

ingressResource:
  domainName: "trydextrus.com" #Domain name created for the application. Leave empty if DomainName is not used. It can be both public and private domain name.
  sslEnabled: "yes" #Enter "yes" if ssl needs to be enabled. Leave empty if there is no domainName.


  # if SSL Enabled is "yes", Make sure a secret is created with cachain.cer(certificate chain) and private key
  # command to create a secret with certificates
  # kubectl create secret tls <secretName> --cert=path/to/tls.cert --key=path/to/tls.key
  # check "kubectl create secret tls --help" for more details
  # This certificate should be available in same namespace the application will be deployed. If no namespace is provide above then it can be created in default namespace
  SecretName: "dextrus-cert" #ssl certs received from public/private domain. needs to be used as a form of secret. secret should contain cert chain(cachain.cer) & private key (private.key)





  # These parameters are still under testing
  createSecret: "yes" #Only Enter "yes" if you want to create a secret as a part of dextrus-helm chart. 
  caCRT: "" #provide Base64 encoded certificate of the domain
  privateKey: "" #provide Base64 encoded certificate of the domain
  rootCRT: "" #provide Base64 encoded certificate of Certificate Authority / Root Cert
   
